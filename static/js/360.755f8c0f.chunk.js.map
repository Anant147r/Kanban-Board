{"version":3,"file":"static/js/360.755f8c0f.chunk.js","mappings":"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","sources":["webpack://kabanboard/./src/Components/Dashboard/Task/Task.module.css?af70","webpack://kabanboard/./src/Components/Dashboard/Dashboard.module.css?ccd0","Redux/TaskManagement/TaskManagementActions.js","Components/Dashboard/Task/Task.js","Components/Dashboard/Dashboard.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"task\":\"Task_task__vvJKy\",\"taskDetail\":\"Task_taskDetail__NaulH\",\"taskDetailText\":\"Task_taskDetailText__xrOK7\",\"button\":\"Task_button__dXP9z\"};","// extracted by mini-css-extract-plugin\nexport default {\"dashboard\":\"Dashboard_dashboard__RtNIU\",\"refreshButton\":\"Dashboard_refreshButton__udr6r\",\"trashCan\":\"Dashboard_trashCan__eM74P\",\"introSection\":\"Dashboard_introSection__kD-8V\",\"cautionText\":\"Dashboard_cautionText__vkh1i\",\"tasks\":\"Dashboard_tasks__zmmDl\",\"heading\":\"Dashboard_heading__SXMTP\",\"formAddTaskButton\":\"Dashboard_formAddTaskButton__3X7hw\"};","import axios from \"axios\";\r\nimport { FETCH_USER_TASK, FETCH_SUCESSFUL } from \"./TaskManagementTypes\";\r\nimport { BASE_URL } from \"../../Assets/URL/URL\";\r\nexport const fetchUserTask = (activeUser) => async (dispatch) => {\r\n  // console.log(\"asdfasdf\");\r\n  try {\r\n    // dispatch({ type: FETCH_USER_TASK });\r\n    const res = await axios.get(\r\n      BASE_URL + `userTasks?userId=${activeUser}`\r\n      // `http://localhost:3000/userTasks?userId=${activeUser}`\r\n    );\r\n    return res.data;\r\n    // dispatch({ type: FETCH_SUCESSFUL, payload: res.data });\r\n    // console.log(res);\r\n    // return res.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n\r\n  // console.log(\"asdfasdfasdfasd\");\r\n};\r\n\r\nexport const addUserTask = (data) => async (dispatch) => {\r\n  try {\r\n    const res = axios.post(\r\n      // \"http://localhost:3000/userTasks\",\r\n      BASE_URL + \"userTasks\",\r\n      //  { userId:data.userId,taskName:data.taskName,priority:data.priority,deadline:data.deadline,stage:data.stage }\r\n      { ...data }\r\n    );\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const updateUserTaskStage = (taskId, newStage) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(\r\n      BASE_URL + `userTasks/${taskId}`,\r\n      // `http://localhost:3000/userTasks/${taskId}`\r\n      {\r\n        stage: newStage,\r\n      }\r\n    );\r\n    // const res=await axios.get(\"htt\")\r\n    // console.log(\"done\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const deleteUserTask = (taskId) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(\r\n      BASE_URL + `userTasks/${taskId}`\r\n      // `http://localhost:3000/userTasks/${taskId}`\r\n    );\r\n    console.log(\"Task Deleted\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const updateUserStageDetails =\r\n  (taskId, newDetails) => async (dispatch) => {\r\n    try {\r\n      await axios.patch(\r\n        BASE_URL + `userTasks/${taskId}`,\r\n        // `http://localhost:3000/userTasks/${taskId}`\r\n        {\r\n          taskName: newDetails.taskName,\r\n          priority: newDetails.priority,\r\n          deadLine: newDetails.deadLine,\r\n        }\r\n      );\r\n      // const res=await axios.get(\"htt\")\r\n      // console.log(\"done\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport styles from \"./Task.module.css\";\r\nimport styles2 from \"../Dashboard.module.css\";\r\nimport {\r\n  updateUserTaskStage,\r\n  deleteUserTask,\r\n  fetchUserTask,\r\n  updateUserStageDetails,\r\n} from \"../../../Redux/TaskManagement/TaskManagementActions\";\r\nimport { connect } from \"react-redux\";\r\nconst Task = ({\r\n  taskName,\r\n  priority,\r\n  deadline,\r\n  stage,\r\n  taskId,\r\n  updateUserTaskStage,\r\n  deleteUserTask,\r\n  incrementValue,\r\n  updateUserStageDetails,\r\n}) => {\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: \"task\",\r\n    item: { taskId: taskId },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (isDragging === true)\r\n      document.querySelector(`.${styles2.trashCan}`).style[\"visibility\"] =\r\n        \"visible\";\r\n    else\r\n      document.querySelector(`.${styles2.trashCan}`).style[\"visibility\"] =\r\n        \"hidden\";\r\n  }, [isDragging]);\r\n  const updateStage = (taskId, newStage) => {\r\n    updateUserTaskStage(taskId, newStage);\r\n    fetchUserTask();\r\n    // setVal(val + 1);\r\n    incrementValue();\r\n  };\r\n  const deleteTask = (taskId) => {\r\n    deleteUserTask(taskId);\r\n    fetchUserTask();\r\n    // setVal(val + 1);\r\n    incrementValue();\r\n  };\r\n  const updateUserDetails = (taskId, newUserDetails) => {\r\n    updateUserStageDetails(taskId, newUserDetails);\r\n    fetchUserTask();\r\n    incrementValue();\r\n    clearUserDetailsFromForm();\r\n  };\r\n  const clearUserDetailsFromForm = () => {\r\n    setNewTaskName(\"\");\r\n    setNewPriority(\"low\");\r\n    setNewDeadLine(\"\");\r\n    fetchUserTask();\r\n    incrementValue();\r\n    // document.querySelector(\".updateUserDetailClose\").click();\r\n  };\r\n  const [newTaskName, setNewTaskName] = useState(\"\");\r\n  const [newPriority, setNewPriority] = useState(\"low\");\r\n  const [newDeadLine, setNewDeadLine] = useState(\"\");\r\n  return (\r\n    <div\r\n      className={`${styles.task} container`}\r\n      ref={drag}\r\n      style={{ border: isDragging ? \"5px solid red\" : \"1px solid #ced4da\" }}\r\n    >\r\n      <div className={`${styles.taskName} ${styles.taskDetail}`}>\r\n        <span>Task Name - </span>\r\n        <span className={styles.taskDetailText}>{taskName} </span>\r\n      </div>\r\n      <div className={`${styles.taskPriority} ${styles.taskDetail}`}>\r\n        <span>Priority - </span>\r\n        <span className={styles.taskDetailText}>{priority}</span>\r\n      </div>\r\n      <div className={`${styles.taskDeadline} ${styles.taskDetail}`}>\r\n        <span>Deadline - </span>\r\n        <span className={styles.taskDetailText}>{deadline}</span>\r\n      </div>\r\n      <button\r\n        // className={`btn btn-success ${!prev ? \"disabled\" : \"\"}`}\r\n        className={`${styles.button} btn btn-success`}\r\n        disabled={stage == 0 ? true : false}\r\n        onClick={() => {\r\n          updateStage(taskId, parseInt(stage) - 1);\r\n        }}\r\n      >\r\n        Previous\r\n      </button>\r\n      <br></br>\r\n      <button\r\n        // className={`btn btn-success ${!next ? \"disabled\" : \"\"}`}\r\n        className={`${styles.button} btn btn-success`}\r\n        disabled={stage == 3 ? true : false}\r\n        onClick={() => {\r\n          updateStage(taskId, parseInt(stage) + 1);\r\n        }}\r\n      >\r\n        Next\r\n      </button>\r\n      <br />\r\n      <button\r\n        // className={`btn btn-success ${!next ? \"disabled\" : \"\"}`}\r\n        className={`${styles.button} btn btn-success`}\r\n        data-toggle=\"modal\"\r\n        data-target={`#newUserDetails${taskId}`}\r\n        onClick={() => {\r\n          // console.log(taskId);\r\n        }}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      <div\r\n        className=\"modal fade\"\r\n        id={`newUserDetails${taskId}`}\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby={`newUserDetails${taskId}Title`}\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                Enter new user details\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close updateUserDetailClose\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n                onClick={() => {\r\n                  clearUserDetailsFromForm();\r\n                }}\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form\r\n                onSubmit={(event) => {\r\n                  event.preventDefault();\r\n                  // console.log(taskId);\r\n                  updateUserDetails(taskId, {\r\n                    taskName: newTaskName,\r\n                    priority: newPriority,\r\n                    deadLine: newDeadLine,\r\n                  });\r\n                }}\r\n              >\r\n                <div className=\"form-group\" style={{ textAlign: \"left\" }}>\r\n                  <label htmlFor=\"newTaskName\">\r\n                    <h5>Task Name</h5>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"newTaskName\"\r\n                    aria-describedby=\"newTaskNameHelp\"\r\n                    placeholder=\"Enter new task name\"\r\n                    value={newTaskName}\r\n                    onChange={(event) => {\r\n                      setNewTaskName(event.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-group\" style={{ textAlign: \"left\" }}>\r\n                  <label htmlFor=\"newPriority\">\r\n                    {\" \"}\r\n                    <h5>Priority</h5>{\" \"}\r\n                  </label>\r\n                  <br></br>\r\n                  <select\r\n                    value={newPriority}\r\n                    onChange={(event) => {\r\n                      setNewPriority(event.target.value);\r\n                    }}\r\n                  >\r\n                    <option>low</option>\r\n                    <option>medium</option>\r\n                    <option>high</option>\r\n                  </select>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-group\" style={{ textAlign: \"left\" }}>\r\n                  <label htmlFor=\"newDeadline\">\r\n                    <h5>Deadline</h5>\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    id=\"newDeadline\"\r\n                    placeholder=\"Enter new deadline\"\r\n                    value={newDeadLine}\r\n                    onChange={(event) => {\r\n                      setNewDeadLine(event.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n      <button\r\n        className={`${styles.button} btn btn-danger`}\r\n        onClick={() => {\r\n          deleteTask(taskId);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateUserTaskStage: (taskId, newStage) => {\r\n      dispatch(updateUserTaskStage(taskId, newStage));\r\n    },\r\n    deleteUserTask: (taskId) => {\r\n      dispatch(deleteUserTask(taskId));\r\n    },\r\n    updateUserStageDetails: (taskId, newUserDetails) => {\r\n      dispatch(updateUserStageDetails(taskId, newUserDetails));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Task);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport axios from \"axios\";\r\n// import { useHistory, Redirect } from \"react-router-dom\";\r\nimport Task from \"./Task/Task\";\r\nimport {\r\n  fetchUserTask,\r\n  addUserTask,\r\n  updateUserTaskStage,\r\n  deleteUserTask,\r\n} from \"../../Redux/TaskManagement/TaskManagementActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { FETCH_USER_TASK } from \"../../Redux/TaskManagement/TaskManagementTypes\";\r\nimport { BASE_URL } from \"../../Assets/URL/URL\";\r\nimport styles from \"./Dashboard.module.css\";\r\nconst Dashboard = ({\r\n  userName,\r\n  activeUser,\r\n  addUserTask,\r\n  isAuthenticated,\r\n  updateUserTaskStage,\r\n  deleteUserTask,\r\n}) => {\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"low\");\r\n  const [deadLine, setDeadline] = useState(\"\");\r\n  const [stage, setStage] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userTasks, setUserTasks] = useState([]);\r\n  const [val, setVal] = useState(1);\r\n  // const [trashCanVisibilty,setTrashCanVisibility]\r\n  const history = useHistory();\r\n\r\n  const [{ isOver1 }, drop1] = useDrop(() => ({\r\n    accept: \"task\",\r\n    drop: (item) => addTaskToBoard1(item.taskId),\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n  const [{ isOver2 }, drop2] = useDrop(() => ({\r\n    accept: \"task\",\r\n    drop: (item) => addTaskToBoard2(item.taskId),\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n  const [{ isOver3 }, drop3] = useDrop(() => ({\r\n    accept: \"task\",\r\n    drop: (item) => addTaskToBoard3(item.taskId),\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n  const [{ isOver4 }, drop4] = useDrop(() => ({\r\n    accept: \"task\",\r\n    drop: (item) => addTaskToBoard4(item.taskId),\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n  const [{ isOver }, trashDrop] = useDrop(() => ({\r\n    accept: \"task\",\r\n    drop: (item) => deleteTask(item.taskId),\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n\r\n  const deleteTask = (taskId) => {\r\n    var confirmation = window.confirm(\"Are you sure you want to delete it?\");\r\n    // console.log(confirmation);\r\n    if (confirmation) {\r\n      deleteUserTask(taskId);\r\n      fetchUserTask();\r\n      setVal((val) => val + 1);\r\n    } else {\r\n      fetchUserTask();\r\n      setVal((val) => val + 1);\r\n    }\r\n  };\r\n\r\n  const updateTaskStage = (taskId, newStage) => {\r\n    updateUserTaskStage(taskId, newStage);\r\n    fetchUserTask();\r\n    setVal((val) => val + 1);\r\n  };\r\n\r\n  const makeTrashCanVisible = () => {\r\n    document.querySelector(`.${styles.trashCan}`).style[\"visibility\"] =\r\n      \"visible\";\r\n  };\r\n\r\n  const addTaskToBoard1 = (taskId) => {\r\n    updateTaskStage(taskId, 0);\r\n    makeTrashCanVisible();\r\n  };\r\n  const addTaskToBoard2 = (taskId) => {\r\n    updateTaskStage(taskId, 1);\r\n    makeTrashCanVisible();\r\n  };\r\n  const addTaskToBoard3 = (taskId) => {\r\n    updateTaskStage(taskId, 2);\r\n    makeTrashCanVisible();\r\n  };\r\n  const addTaskToBoard4 = (taskId) => {\r\n    updateTaskStage(taskId, 3);\r\n    makeTrashCanVisible();\r\n  };\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        BASE_URL + `userTasks?userId=${activeUser}`\r\n        // `http://localhost:3000/userTasks?userId=${activeUser}`\r\n      );\r\n      setUserTasks(res.data);\r\n\r\n      setLoading(false);\r\n    } catch (err) {}\r\n  };\r\n  useEffect(() => {\r\n    // console.log(userInfo);\r\n    fetchTasks();\r\n  }, [val, fetchUserTask]);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) history.push(\"/\");\r\n  }, []);\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    addUserTask({ userId: activeUser, taskName, priority, deadLine, stage });\r\n    setTaskName(\"\");\r\n    setPriority(\"\");\r\n    setDeadline(\"\");\r\n    setStage(0);\r\n    fetchUserTask();\r\n    setVal((val) => val + 1);\r\n\r\n    // alert(\"Your task has been added\");\r\n    // document.querySelector(\".addTaskCloseButton\").click();\r\n    // history.push(\"/dashboard\");\r\n    // window.open(\"/dashboard\");\r\n  };\r\n  const incrementValue = () => {\r\n    setVal((val) => val + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div>Loading</div>\r\n      ) : (\r\n        <div className={`${styles.dashboard} container`}>\r\n          <div className={`${styles.refreshButton}`}>\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => {\r\n                fetchUserTask();\r\n                setVal((val) => val + 1);\r\n              }}\r\n            >\r\n              Refresh\r\n            </button>{\" \"}\r\n          </div>\r\n          <div\r\n            className={`${styles.trashCan}`}\r\n            ref={trashDrop}\r\n            style={{\r\n              border: isOver ? \"5px solid red\" : \"1px solid black\",\r\n              color: isOver ? \"red\" : \"black\",\r\n            }}\r\n          >\r\n            Trash Can\r\n          </div>\r\n          <div className={`${styles.introSection}`}>\r\n            <h3>Welcome {userName ? userName : \"\"}</h3>\r\n            <h6 style={{ color: \"red\" }}>\r\n              Your can drag the tasks using mouse\r\n            </h6>\r\n          </div>\r\n          <button\r\n            className={`${styles.addTaskButton}`}\r\n            className=\"btn btn-primary\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#taskForm\"\r\n            style={{\r\n              // border: \"1px solid black\",\r\n              display: \"block\",\r\n              margin: \"0 auto\",\r\n              marginBottom: \"2rem\",\r\n            }}\r\n          >\r\n            Add A New Task\r\n          </button>\r\n          {userTasks.length == 0 ? (\r\n            <h4 className={styles.cautionText}>\r\n              Your task list is empty. Click on ADD A NEW TASK button to add a\r\n              task\r\n            </h4>\r\n          ) : (\r\n            <div\r\n              className={`${styles.tasks}`}\r\n              //\r\n            >\r\n              <div ref={drop1}>\r\n                <h3 className={`${styles.heading}`}>Backlog</h3>\r\n                <div>\r\n                  {userTasks &&\r\n                    userTasks.map((item, index) => {\r\n                      if (item.stage == 0) {\r\n                        return (\r\n                          <div key={index}>\r\n                            <Task\r\n                              taskName={item.taskName}\r\n                              priority={item.priority}\r\n                              deadline={item.deadLine}\r\n                              stage={item.stage}\r\n                              taskId={item.id}\r\n                              incrementValue={() => {\r\n                                incrementValue();\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })}\r\n                </div>\r\n              </div>\r\n              <div ref={drop2}>\r\n                <h3 className={`${styles.heading}`}>To Do</h3>\r\n                <div>\r\n                  {userTasks &&\r\n                    userTasks.map((item, index) => {\r\n                      if (item.stage == 1) {\r\n                        return (\r\n                          <div key={index}>\r\n                            <Task\r\n                              taskName={item.taskName}\r\n                              priority={item.priority}\r\n                              deadline={item.deadLine}\r\n                              stage={item.stage}\r\n                              taskId={item.id}\r\n                              incrementValue={() => {\r\n                                incrementValue();\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })}{\" \"}\r\n                </div>\r\n              </div>\r\n              <div ref={drop3}>\r\n                <h3 className={`${styles.heading}`}>On Going</h3>\r\n                <div>\r\n                  {userTasks &&\r\n                    userTasks.map((item, index) => {\r\n                      if (item.stage == 2) {\r\n                        return (\r\n                          <div key={index}>\r\n                            <Task\r\n                              taskName={item.taskName}\r\n                              priority={item.priority}\r\n                              deadline={item.deadLine}\r\n                              stage={item.stage}\r\n                              taskId={item.id}\r\n                              incrementValue={() => {\r\n                                incrementValue();\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })}{\" \"}\r\n                </div>\r\n              </div>\r\n              <div ref={drop4}>\r\n                <h3 className={`${styles.heading}`}>Done</h3>\r\n                <div>\r\n                  {userTasks &&\r\n                    userTasks.map((item, index) => {\r\n                      if (item.stage == 3) {\r\n                        return (\r\n                          <div key={index}>\r\n                            <Task\r\n                              taskName={item.taskName}\r\n                              priority={item.priority}\r\n                              deadline={item.deadLine}\r\n                              stage={item.stage}\r\n                              taskId={item.id}\r\n                              incrementValue={() => {\r\n                                incrementValue();\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* <div></div> */}\r\n\r\n          {/* ADD A NEW TASK */}\r\n\r\n          <div\r\n            className=\"modal fade\"\r\n            id=\"taskForm\"\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"taskFormTitle\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\r\n                    Welcome To The Task Form\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close addTaskCloseButton\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                    onClick={() => {\r\n                      fetchUserTask();\r\n                      setVal((val) => val + 1);\r\n                    }}\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <form onSubmit={submitHandler}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"taskName\">\r\n                        <h5>Task Name</h5>{\" \"}\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"taskName\"\r\n                        aria-describedby=\"taskNameHelp\"\r\n                        placeholder=\"Enter Task\"\r\n                        value={taskName}\r\n                        onChange={(event) => {\r\n                          setTaskName(event.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"priority\">\r\n                        <h5>Priority</h5>{\" \"}\r\n                      </label>\r\n                      <br></br>\r\n                      <select\r\n                        value={priority}\r\n                        onChange={(event) => {\r\n                          setPriority(event.target.value);\r\n                        }}\r\n                      >\r\n                        <option>low</option>\r\n                        <option>medium</option>\r\n                        <option>high</option>\r\n                      </select>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"deadline\">\r\n                        <h5>Deadline</h5>{\" \"}\r\n                      </label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"deadline\"\r\n                        placeholder=\"Enter Deadline\"\r\n                        value={deadLine}\r\n                        onChange={(event) => {\r\n                          setDeadline(event.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                      ADD TASK\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className={`${styles.formAddTaskButton} btn btn-secondary`}\r\n                      data-dismiss=\"modal\"\r\n                      onClick={() => {\r\n                        fetchUserTask();\r\n                        setVal((val) => val + 1);\r\n                      }}\r\n                    >\r\n                      Close\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n                <div className=\"modal-footer\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // tasks: state.TaskManagementReducer,\r\n    // loading: state.TaskManagementReducer.loading,\r\n    userName: state.AuthenticationReducer.data\r\n      ? state.AuthenticationReducer.data.name\r\n      : null,\r\n    tasks: state.TaskManagementReducer.tasks,\r\n    activeUser: state.AuthenticationReducer.activeUser,\r\n    isAuthenticated: state.AuthenticationReducer.isAuthenticated,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUserTasks: (activeUser) => {\r\n      dispatch(fetchUserTask);\r\n    },\r\n    addUserTask: (data) => {\r\n      dispatch(addUserTask(data));\r\n    },\r\n    updateUserTaskStage: (taskId, newStage) => {\r\n      dispatch(updateUserTaskStage(taskId, newStage));\r\n    },\r\n    deleteUserTask: (taskId) => {\r\n      dispatch(deleteUserTask(taskId));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n"],"names":["fetchUserTask","activeUser","dispatch","axios","BASE_URL","res","data","console","log","updateUserTaskStage","taskId","newStage","stage","deleteUserTask","connect","updateUserStageDetails","newUserDetails","newDetails","taskName","priority","deadLine","deadline","incrementValue","useDrag","type","item","collect","monitor","isDragging","drag","useEffect","document","querySelector","styles2","style","updateStage","clearUserDetailsFromForm","setNewTaskName","setNewPriority","setNewDeadLine","useState","newTaskName","newPriority","newDeadLine","className","styles","ref","border","disabled","onClick","parseInt","id","tabIndex","role","onSubmit","event","preventDefault","updateUserDetails","textAlign","htmlFor","placeholder","value","onChange","target","required","deleteTask","state","userName","AuthenticationReducer","name","tasks","TaskManagementReducer","isAuthenticated","fetchUserTasks","addUserTask","err","setTaskName","setPriority","setDeadline","setStage","loading","setLoading","userTasks","setUserTasks","val","setVal","history","useHistory","useDrop","accept","drop","addTaskToBoard1","isOver","drop1","isOver1","addTaskToBoard2","drop2","isOver2","addTaskToBoard3","drop3","isOver3","addTaskToBoard4","drop4","isOver4","trashDrop","window","confirm","updateTaskStage","makeTrashCanVisible","fetchTasks","push","color","display","margin","marginBottom","length","map","index","userId"],"sourceRoot":""}